package br.com.cadastro.converter;

import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.convert.ConverterException;
import javax.faces.convert.FacesConverter;

import br.com.cadastro.dao.BeneficiosDao;
import br.com.cadastro.modelo.Beneficio;

@FacesConverter(value = "beneficioConverter")
public class BeneficioConverter implements Converter {
	
	@Override
	public Object getAsObject(FacesContext fc, UIComponent uic, String value) {
		BeneficiosDao beneficiosDao = new BeneficiosDao(); 
		
		if (value != null && value.trim().length() > 0) {
			try {
				return beneficiosDao.getBeneficioID(Integer.valueOf(value));
			} catch (NumberFormatException e) {
				throw new ConverterException(
						new FacesMessage(FacesMessage.SEVERITY_ERROR, "Conversion Error", "Not a valid theme."));
			}
		} else {
			return null;
		}
	}

	@Override
	public String getAsString(FacesContext fc, UIComponent uic, Object object) {
		if (object != null) {
			return String.valueOf(((Beneficio) object).getId());
		} else {
			return null;
		}
	}

	public List<Beneficio> getIdObject(List<Beneficio> beneficios) {
BeneficiosDao beneficiosDao = new BeneficiosDao(); 
		
			try {
				return beneficiosDao.getBeneficioID(Integer.valueOf(value));
			} catch (NumberFormatException e) {
				throw new ConverterException(
						new FacesMessage(FacesMessage.SEVERITY_ERROR, "Conversion Error", "Not a valid theme."));
			}
		
	}
}
